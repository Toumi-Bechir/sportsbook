{"ast":null,"code":"import _objectSpread from\"/home/sami/aaa/sportsbook/assets/react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import{Socket}from'phoenix';import SportFilter from'./components/SportFilter';import MatchesList from'./components/MatchesList';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[selectedSport,setSelectedSport]=useState('soccer');const[sports,setSports]=useState([]);const[matches,setMatches]=useState([]);const[socket,setSocket]=useState(null);const[connectionStatus,setConnectionStatus]=useState('disconnected');const[lastUpdate,setLastUpdate]=useState(new Date());// Match expansion state\nconst[expandedMatch,setExpandedMatch]=useState(null);const[fullMatchData,setFullMatchData]=useState({});// Market dictionaries cache\nconst[marketDictionaries,setMarketDictionaries]=useState({});// Match events dictionaries cache\nconst[matchEventsDictionaries,setMatchEventsDictionaries]=useState({});// Keep track of active match subscriptions\nconst matchChannelsRef=useRef(new Map());const detailChannelRef=useRef(null);// Initialize socket connection\nuseEffect(()=>{const newSocket=new Socket('/socket',{params:{userToken:'anonymous'}});newSocket.onOpen(()=>{console.log('Socket connected');setConnectionStatus('connected');});newSocket.onError(()=>{console.log('Socket error');setConnectionStatus('error');});newSocket.onClose(()=>{console.log('Socket closed');setConnectionStatus('disconnected');});newSocket.connect();setSocket(newSocket);// Cleanup on unmount\nreturn()=>{if(newSocket){newSocket.disconnect();}};},[]);// Fetch initial sports list\nuseEffect(()=>{fetch('/api/sports').then(response=>response.json()).then(data=>{setSports(data.sports||[]);}).catch(error=>{console.error('Error fetching sports:',error);});},[]);// Fetch market dictionary and match events when sport changes\nuseEffect(()=>{if(!selectedSport)return;// Check if we already have both dictionaries for this sport\nif(marketDictionaries[selectedSport]&&matchEventsDictionaries[selectedSport]){console.log(\"Dictionaries for \".concat(selectedSport,\" already cached\"));return;}console.log(\"Fetching dictionaries for \".concat(selectedSport));fetch(\"/api/markets/\".concat(selectedSport)).then(response=>response.json()).then(data=>{if(data.markets){// Convert markets array to map for faster lookups\nconst marketMap={};data.markets.forEach(market=>{marketMap[market.id]=market.name;});setMarketDictionaries(prev=>_objectSpread(_objectSpread({},prev),{},{[selectedSport]:marketMap}));console.log(\"Cached \".concat(data.markets.length,\" markets for \").concat(selectedSport));}if(data.match_events){// Convert match events array to map for faster lookups\nconst eventsMap={};data.match_events.forEach(event=>{eventsMap[event.code]=event.name;});setMatchEventsDictionaries(prev=>_objectSpread(_objectSpread({},prev),{},{[selectedSport]:eventsMap}));console.log(\"Cached \".concat(data.match_events.length,\" match events for \").concat(selectedSport));}}).catch(error=>{console.error('Error fetching dictionaries:',error);});},[selectedSport,marketDictionaries,matchEventsDictionaries]);// Fetch initial matches when sport changes\nuseEffect(()=>{if(!selectedSport)return;console.log(\"Fetching initial matches for \".concat(selectedSport));fetch(\"/api/matches/\".concat(selectedSport)).then(response=>response.json()).then(data=>{console.log(\"Received initial matches for \".concat(selectedSport,\":\"),data);setMatches(data.matches||[]);setLastUpdate(new Date());}).catch(error=>{console.error('Error fetching matches:',error);setMatches([]);});},[selectedSport]);// Subscribe to individual matches when matches change\nuseEffect(()=>{if(!socket||!selectedSport||matches.length===0)return;console.log(\"Setting up match subscriptions for \".concat(selectedSport));// Clean up existing subscriptions\nmatchChannelsRef.current.forEach((channel,matchId)=>{console.log(\"Leaving subscription for match \".concat(matchId));channel.leave();});matchChannelsRef.current.clear();// Subscribe to each match\nmatches.forEach(league=>{league.matches.forEach(match=>{subscribeToMatch(match.id);});});// Cleanup function\nreturn()=>{matchChannelsRef.current.forEach((channel,matchId)=>{console.log(\"Cleaning up subscription for match \".concat(matchId));channel.leave();});matchChannelsRef.current.clear();};},[socket,selectedSport,matches.length]);// Only re-run when matches count changes\n// Handle expanded match detail subscription\nuseEffect(()=>{if(!socket||!expandedMatch||!selectedSport){// Clean up detail channel if no expanded match\nif(detailChannelRef.current){detailChannelRef.current.leave();detailChannelRef.current=null;}return;}console.log(\"Setting up detail subscription for match \".concat(expandedMatch));// Clean up existing detail channel\nif(detailChannelRef.current){detailChannelRef.current.leave();}// Subscribe to detailed match updates\nconst detailChannel=socket.channel(\"match_details:\".concat(selectedSport,\":\").concat(expandedMatch),{});detailChannel.join().receive('ok',()=>{console.log(\"\\u2705 Successfully subscribed to detailed updates for match \".concat(expandedMatch));}).receive('error',resp=>{console.log(\"\\u274C Failed to subscribe to detailed updates for match \".concat(expandedMatch,\":\"),resp);});// Handle full match data updates\ndetailChannel.on('full_match_data',payload=>{console.log(\"\\uD83D\\uDD04 Full match data for \".concat(expandedMatch,\":\"),payload);setFullMatchData(prev=>_objectSpread(_objectSpread({},prev),{},{[expandedMatch]:payload.data}));setLastUpdate(new Date());});detailChannelRef.current=detailChannel;// Cleanup when expandedMatch changes\nreturn()=>{if(detailChannel){detailChannel.leave();}};},[socket,expandedMatch,selectedSport]);const subscribeToMatch=matchId=>{if(matchChannelsRef.current.has(matchId)){return;// Already subscribed\n}const channelTopic=\"match:\".concat(selectedSport,\":\").concat(matchId);console.log(\"Subscribing to \".concat(channelTopic));const matchChannel=socket.channel(channelTopic,{});matchChannel.join().receive('ok',()=>{console.log(\"\\u2705 Successfully subscribed to match \".concat(matchId));}).receive('error',resp=>{console.log(\"\\u274C Failed to subscribe to match \".concat(matchId,\":\"),resp);});// Handle individual match updates\nmatchChannel.on('match_update',payload=>{console.log(\"\\uD83D\\uDD04 Match \".concat(matchId,\" updated:\"),payload);updateSpecificMatch(matchId,payload.data);});// Store the channel reference\nmatchChannelsRef.current.set(matchId,matchChannel);};// Efficient function to update only a specific match\nconst updateSpecificMatch=(matchId,newData)=>{setMatches(prevMatches=>{return prevMatches.map(league=>{const matchIndex=league.matches.findIndex(m=>m.id===matchId);if(matchIndex===-1)return league;// Match not in this league\n// Create new matches array with updated match\nconst updatedMatches=[...league.matches];updatedMatches[matchIndex]=_objectSpread(_objectSpread({},updatedMatches[matchIndex]),{},{data:newData});return _objectSpread(_objectSpread({},league),{},{matches:updatedMatches});});});setLastUpdate(new Date());};// Handle match toggle\nconst handleToggleMatch=matchId=>{if(expandedMatch===matchId){// Close currently expanded match\nsetExpandedMatch(null);setFullMatchData(prev=>{const newData=_objectSpread({},prev);delete newData[matchId];return newData;});}else{// Open new match (close others automatically)\nsetExpandedMatch(matchId);// Clear previous match data\nsetFullMatchData({});}};const formatTime=seconds=>{if(!seconds)return'00:00';const minutes=Math.floor(seconds/60);const remainingSeconds=seconds%60;return\"\".concat(minutes,\":\").concat(remainingSeconds.toString().padStart(2,'0'));};const getConnectionStatusColor=()=>{switch(connectionStatus){case'connected':return'#10B981';case'error':return'#EF4444';default:return'#6B7280';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-100\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"bg-gray-900 text-white border-b border-gray-700\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between py-2 text-sm border-b border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-yellow-400 font-bold text-lg\",children:\"bet365\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2 text-gray-300\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"w-2 h-2 rounded-full\",style:{backgroundColor:getConnectionStatusColor()}}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:connectionStatus.toUpperCase()})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-6 text-xs text-gray-300\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD83D\\uDCE1 \",matchChannelsRef.current.size,\" Live Feeds\"]}),expandedMatch&&/*#__PURE__*/_jsxs(\"span\",{className:\"bg-green-600 px-2 py-1 rounded text-white\",children:[\"LIVE: \",expandedMatch]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Updated: \",lastUpdate.toLocaleTimeString()]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between py-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-8\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold text-yellow-400\",children:\"\\uD83C\\uDFC6 Sports\"}),/*#__PURE__*/_jsxs(\"nav\",{className:\"flex items-center gap-6 text-sm\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"text-white hover:text-yellow-400 transition-colors\",children:\"Live\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"text-gray-300 hover:text-yellow-400 transition-colors\",children:\"Pre-Match\"}),/*#__PURE__*/_jsx(\"a\",{href:\"#\",className:\"text-gray-300 hover:text-yellow-400 transition-colors\",children:\"Results\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-300\",children:\"Welcome\"}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-600 hover:bg-green-700 px-4 py-1 rounded text-white font-medium transition-colors\",children:\"Join Now\"})]})]})]})}),/*#__PURE__*/_jsx(\"main\",{className:\"max-w-7xl mx-auto px-4 py-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-12 gap-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-span-3\",children:/*#__PURE__*/_jsx(SportFilter,{sports:sports,selectedSport:selectedSport,onSportChange:setSelectedSport})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-span-9\",children:/*#__PURE__*/_jsx(MatchesList,{sport:selectedSport,matches:matches,formatTime:formatTime,expandedMatch:expandedMatch,onToggleMatch:handleToggleMatch,fullMatchData:fullMatchData,marketDictionary:marketDictionaries[selectedSport]||{},matchEventsDictionary:matchEventsDictionaries[selectedSport]||{}})})]})})]});}export default App;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}