{"ast":null,"code":"import _objectSpread from\"/home/sami/aaa/sportsbook/assets/react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import{Socket}from'phoenix';import SportFilter from'./components/SportFilter';import MatchesList from'./components/MatchesList';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[selectedSport,setSelectedSport]=useState('soccer');const[sports,setSports]=useState([]);const[matches,setMatches]=useState([]);const[socket,setSocket]=useState(null);const[channel,setChannel]=useState(null);const[connectionStatus,setConnectionStatus]=useState('disconnected');const[lastUpdate,setLastUpdate]=useState(new Date());// Initialize socket connection\nuseEffect(()=>{const newSocket=new Socket('/socket',{params:{userToken:'anonymous'}});newSocket.onOpen(()=>{console.log('Socket connected');setConnectionStatus('connected');});newSocket.onError(()=>{console.log('Socket error');setConnectionStatus('error');});newSocket.onClose(()=>{console.log('Socket closed');setConnectionStatus('disconnected');});newSocket.connect();setSocket(newSocket);// Cleanup on unmount\nreturn()=>{if(newSocket){newSocket.disconnect();}};},[]);// Fetch initial sports list\nuseEffect(()=>{fetch('/api/sports').then(response=>response.json()).then(data=>{setSports(data.sports||[]);}).catch(error=>{console.error('Error fetching sports:',error);});},[]);// Handle sport selection changes\nuseEffect(()=>{if(!socket||!selectedSport)return;// Leave previous channel if exists\nif(channel){channel.leave();}// Join new sport channel\nconst newChannel=socket.channel(\"matches:\".concat(selectedSport),{});newChannel.join().receive('ok',resp=>{console.log(\"Joined matches:\".concat(selectedSport,\" successfully\"),resp);}).receive('error',resp=>{console.log(\"Unable to join matches:\".concat(selectedSport),resp);});// Handle initial matches data\nnewChannel.on('initial_matches',payload=>{console.log('Received initial matches:',payload);setMatches(payload.matches||[]);setLastUpdate(new Date());});// Handle match updates\nnewChannel.on('matches_updated',payload=>{console.log('Matches updated:',payload);setMatches(payload.matches||[]);setLastUpdate(new Date());});// Handle individual match removals\nnewChannel.on('match_removed',payload=>{console.log('Match removed:',payload);setLastUpdate(new Date());});setChannel(newChannel);// Subscribe to individual match updates for real-time data\nmatches.forEach(league=>{league.matches.forEach(match=>{const matchChannel=socket.channel(\"match:\".concat(selectedSport,\":\").concat(match.id),{});matchChannel.join().receive('ok',()=>{console.log(\"Subscribed to match \".concat(match.id));});matchChannel.on('match_update',payload=>{console.log(\"Match \".concat(match.id,\" updated:\"),payload);// Update specific match in the matches array\nsetMatches(prevMatches=>prevMatches.map(league=>_objectSpread(_objectSpread({},league),{},{matches:league.matches.map(m=>m.id===match.id?_objectSpread(_objectSpread({},m),{},{data:payload.data}):m)})));setLastUpdate(new Date());});});});// Cleanup\nreturn()=>{if(newChannel){newChannel.leave();}};},[socket,selectedSport]);const formatTime=seconds=>{if(!seconds)return'00:00';const minutes=Math.floor(seconds/60);const remainingSeconds=seconds%60;return\"\".concat(minutes,\":\").concat(remainingSeconds.toString().padStart(2,'0'));};const getConnectionStatusColor=()=>{switch(connectionStatus){case'connected':return'#10B981';case'error':return'#EF4444';default:return'#6B7280';}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"app-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83C\\uDFC6 Sportsbook Live\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"connection-status\",style:{color:getConnectionStatusColor()},children:[\"\\u25CF \",connectionStatus]}),/*#__PURE__*/_jsxs(\"div\",{className:\"last-update\",children:[\"Last update: \",lastUpdate.toLocaleTimeString()]})]})]})}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(SportFilter,{sports:sports,selectedSport:selectedSport,onSportChange:setSelectedSport}),/*#__PURE__*/_jsx(MatchesList,{sport:selectedSport,matches:matches,formatTime:formatTime})]})})]});}export default App;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}